{
  "name": "dizim-template-system",
  "version": "0.0.1",
  "description": "dizim-template-system",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "prebuild": "rimraf dist",
    "migration:generate": "typeorm-ts-node-commonjs migration:generate -d src/dataSource.ts",
    "migration:run": "typeorm-ts-node-commonjs migration:run -d src/dataSource.ts",
    "migration:revert": "typeorm-ts-node-commonjs migration:revert -d src/dataSource.ts",
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "prepare": "node -e \"try { require('husky').install() } catch (e) {if (e.code !== 'MODULE_NOT_FOUND') throw e}\"",
    "docs": "swagger-jsdoc -d ./swagger.config.js -o ./delivery-system.json",
    "docs:internal": "swagger-jsdoc -d ./swagger.internal.config.js -o ./delivery-system.internal.json",
    "docs:external": "swagger-jsdoc -d ./swagger.external.config.js -o ./delivery-system.external.json"
  },
  "dependencies": {
    "@nestjs/common": "^9.0.7",
    "@nestjs/config": "^2.2.0",
    "@nestjs/core": "^9.0.7",
    "@nestjs/platform-express": "^9.0.7",
    "@nestjs/serve-static": "^3.0.0",
    "@nestjs/swagger": "^5.2.1",
    "@nestjs/typeorm": "^9.0.0",
    "@types/crypto-js": "^4.1.1",
    "@types/ioredis": "^4.28.10",
    "be-core": "^1.2.6",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.13.2",
    "crypto-js": "^4.1.1",
    "dotenv": "^16.0.1",
    "ioredis": "^5.0.6",
    "kafkajs": "^2.2.0",
    "lodash": "^4.17.21",
    "mongodb": "^3.7.3",
    "mysql2": "^2.3.3",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^3.0.2",
    "rxjs": "^7.2.0",
    "typeorm": "^0.3.7"
  },
  "devDependencies": {
    "@nestjs/cli": "^9.0.0",
    "@nestjs/schematics": "^9.0.1",
    "@nestjs/testing": "^8.0.0",
    "@types/express": "^4.17.13",
    "@types/jest": "27.5.0",
    "@types/lodash": "^4.14.182",
    "@types/node": "^16.0.0",
    "@types/supertest": "^2.0.11",
    "@typescript-eslint/eslint-plugin": "^5.0.0",
    "@typescript-eslint/parser": "^5.0.0",
    "eslint": "^8.19.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-import-resolver-typescript": "^3.2.5",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-prettier": "^4.2.1",
    "husky": "^8.0.0",
    "jest": "28.0.3",
    "nodemon": "^2.0.18",
    "prettier": "^2.3.2",
    "source-map-support": "^0.5.20",
    "supertest": "^6.1.3",
    "swagger-jsdoc": "^5.0.1 ",
    "ts-jest": "28.0.1",
    "ts-loader": "^9.2.3",
    "ts-node": "^10.0.0",
    "tsconfig-paths": "4.0.0",
    "typescript": "^4.3.5"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "moduleNameMapper": {
      "^src/(.*)$": "<rootDir>/$1",
      "^config/(.*)$": "<rootDir>/../config/$1",
      "^@modules/(.*)$": "<rootDir>/modules/$1",
      "^@entities/(.*)$": "<rootDir>/modules/shared/entities/$1",
      "^@helpers/(.*)$": "<rootDir>/helpers/$1",
      "^@constants/(.*)$": "<rootDir>/constants/$1",
      "^@shared/(.*)$": "<rootDir>/modules/shared/$1",
      "^@core/(.*)$": "<rootDir>/core/$1",
      "^~/(.*)$": "<rootDir>/$1"
    },
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s",
      "!**/index.(ts|js)",
      "!**/*.module.(ts|js)",
      "!**/*.dto.(ts|js)",
      "!**/*.enum.(ts|js)",
      "!**/*.interface.(ts|js)",
      "!./config.ts",
      "!./main.ts",
      "!./migrations/*.ts"
    ],
    "modulePathIgnorePatterns": [],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node",
    "roots": [
      "./"
    ],
    "collectCoverage": true,
    "coverageThreshold": {
      "global": {
        "lines": 99
      }
    },
    "maxConcurrency": 4,
    "maxWorkers": 4
  }
}
